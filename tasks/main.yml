---
- name: Create group
  group:
    name: "{{ sftp_group_name }}"
    state: present
- name: Update skel with .ssh
  file:
    path: /etc/skel/.ssh
    force: no
    mode: 0700
    state: directory
- name: Retrieve status for authorized_keys
  stat:
    path: "/etc/skel/.ssh/authorized_keys"
  register: authorized_keys
- name: Update skel with authorized_keys
  file:
    state: touch
    force: no
    path: /etc/skel/.ssh/authorized_keys
    mode: 0600
  when: not authorized_keys.stat.exists
- name: insert/update "Match User" configuration block in /etc/ssh/sshd_config
  blockinfile:
    path: /etc/ssh/sshd_config
    marker: "# {mark} added by ansible"
    block: |
      Match Group {{ sftp_group_name }}
      X11Forwarding no
      AllowTcpForwarding no
      PermitTTY no
      ForceCommand internal-sftp
      ChrootDirectory /{{ chroot_home_directory }}/%u
  notify: restart_sshd
- name: Creating users and home directories
  user:
    name: "{{ item.name }}"
    shell: /bin/false
    group: "{{ sftp_group_name }}"
    home: "{{ item.home_directory }}"
    create_home: yes
  loop: "{{ users|flatten(levels=1) }}"
- name: Retrieve status for chroot base dir
  stat:
    path: "/{{ chroot_home_directory }}"
  register: reg_chroot_home_directory
- name: Create base chroot directory
  file:
    state: directory
    mode: 0701
    force: no
    owner: root
    group: "{{ sftp_group_name }}"
    path: "/{{ chroot_home_directory }}"
  when: not reg_chroot_home_directory.stat.exists
- name: Retrieve status for user base dir
  stat:
    path: "/{{ chroot_home_directory }}/{{ item.name }}"
  register: reg_base_dir_for_user
  loop: "{{ users|flatten(levels=1) }}"
  tags: debug
- name: Debug register loop
  debug:
    msg: "Dir {{ item.item.name }} exists {{ item.stat.exists }}"
  tags: debug
  loop: "{{ reg_base_dir_for_user.results }}"
- name: Create base chroot directory for user
  file:
    state: directory
    force: no
    mode: 0701
    owner: root
    group: "{{ sftp_group_name }}"
    path: "/{{ chroot_home_directory }}/{{ item.item.name }}"
  loop: "{{ reg_base_dir_for_user.results|flatten(levels=1) }}"
  when: not item.stat.exists
- name: Debug subelements piece
  debug:
    msg: "Item name : {{ item.0.name }} , item1: {{ item.1 }}"
  with_subelements:
    - "{{ users }}"
    - ch_dirs
  tags: debug
- name: Retrieve status for the user writable directories
  stat:
    path: "/{{ chroot_home_directory }}/{{ item.0.name }}/{{ item.1 }}"
  with_subelements:
    - "{{ users }}"
    - ch_dirs
  register: reg_user_writable_dirs
  tags: debug
- name: Debug reg_user_writable_dirs
  debug:
    msg: "{{ item.invocation.module_args.path }}"
  tags: debug
  loop: "{{ reg_user_writable_dirs.results }}"
- name: Create the directories in which the user can write
  file:
    state: directory
    force: no
    mode: 0444
    path: "{{ item.invocation.module_args.path }}" 
  loop: "{{ reg_user_writable_dirs.results }}"
  when: not item.stat.exists
